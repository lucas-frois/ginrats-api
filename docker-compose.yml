version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: ginrats_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ginrats_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ginrats_user -d ginrats_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ginrats.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ginrats_network
    depends_on:
      postgres:
        condition: service_healthy

  # Your GinRats API (when ready)
  # ginrats_api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: ginrats_api
  #   restart: unless-stopped
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ConnectionStrings__DefaultConnection=Host=postgres;Database=ginrats_db;Username=ginrats_user;Password=ginrats_password;Port=5432
  #   ports:
  #     - "5000:8080"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - ginrats_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  ginrats_network:
    driver: bridge